import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';

//API Fetching Asyn Function::

export const fetchData = createAsyncThunk("products/fetch", async function(){

  const response = await fetch('https://api.escuelajs.co/api/v1/categories'); //API
  return await response.json();
})

// Create the ProductSlice

export const ProductSlice = createSlice({
  
  name: 'product', // Name of the slice
  initialState: { 
    products: [], // Initial state with an empty array of products
    status: "idle", //idle, loading, success, failed
    error: null, //Error
  },

 // No need as we are using fetchData to load data from API.
 
/* 

  reducers: { // Reducer to load data from API wihtout using:: REDUX-THUNK
    loadProducts: (state, action) => {
      state.products = action.payload; // Update the state with the payload
    }
  },

*/

  extraReducers: function(builder){

    builder
    .addCase(fetchData.pending, (state) => {
      state.status = "loading";
    })
    .addCase(fetchData.fulfilled, (state, action) => {
      state.products = action.payload;
      state.status =  "success";
    })
  .addCase(fetchData.rejected, (state, action) => {
    state.status = "failed";
    state.error = action.error.message;
    })
},
  
});

// Export the reducer to be used in the store
export default ProductSlice.reducer;

// Export the actions generated by the slice
export const { loadProducts } = ProductSlice.actions;
